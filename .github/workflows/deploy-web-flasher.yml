name: Deploy Web Flasher to GitHub Pages

on:
  push:
    branches: [ main ]
    paths:
      - 'web-flasher/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'web-flasher/**'
  workflow_dispatch:

# Set permissions for the workflow
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: web-flasher/package-lock.json
        
    - name: Install dependencies
      run: |
        cd web-flasher
        npm ci
        
    - name: Build web flasher
      run: |
        cd web-flasher
        npm run build
        
    - name: Copy firmware files to dist
      run: |
        cd web-flasher
        # Copy firmware files and manifests to the dist folder
        cp sender_firmware_v1.0.0.bin dist/
        cp receiver_firmware_v1.0.0.bin dist/
        cp sender_manifest.json dist/
        cp receiver_manifest.json dist/
        echo "‚úÖ Firmware files copied to dist folder"
        
    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: './web-flasher/dist'
        
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
      
    - name: Copy firmware files to Pages
      run: |
        # The firmware files need to be copied to the dist folder before upload
        # This step is now handled by copying files to dist before the upload step
        echo "Firmware files will be included in the dist folder"
        
    - name: Build status
      run: |
        echo "‚úÖ Web flasher built successfully"
        echo "üìÅ Build output: web-flasher/dist/"
        echo "üöÄ Deployed to: ${{ steps.deployment.outputs.page_url }}"
