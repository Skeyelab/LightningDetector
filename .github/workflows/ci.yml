name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    name: Unit Tests

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Cache PlatformIO Core & Libraries
      uses: actions/cache@v4
      with:
        path: |
          ~/.platformio
          .pio/libdeps
        key: ${{ runner.os }}-pio-test-${{ hashFiles('**/platformio.ini', '**/lib_deps') }}
        restore-keys: |
          ${{ runner.os }}-pio-test-
          ${{ runner.os }}-pio-

    - name: Cache Python packages
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}-platformio
        restore-keys: |
          ${{ runner.os }}-pip-platformio
          ${{ runner.os }}-pip-

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install PlatformIO
      run: |
        python -m pip install --upgrade pip
        pip install platformio

    - name: Run Comprehensive Unit Tests
      run: |
        chmod +x run_tests.sh
        ./run_tests.sh

    - name: Upload Test Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: |
          .pio/build/native/
          test_output.log
        retention-days: 5

  build:
    runs-on: ubuntu-latest
    needs: test

    strategy:
      matrix:
        environment: [sender, receiver]

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Cache PlatformIO Core & Libraries
      uses: actions/cache@v4
      with:
        path: |
          ~/.platformio
          .pio/libdeps
        key: ${{ runner.os }}-pio-build-${{ matrix.environment }}-${{ hashFiles('**/platformio.ini', '**/lib_deps') }}
        restore-keys: |
          ${{ runner.os }}-pio-build-${{ matrix.environment }}-
          ${{ runner.os }}-pio-build-
          ${{ runner.os }}-pio-

    - name: Cache Python packages
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}-platformio
        restore-keys: |
          ${{ runner.os }}-pip-platformio
          ${{ runner.os }}-pip-

    - name: Cache Build Artifacts
      uses: actions/cache@v4
      with:
        path: |
          .pio/build
        key: ${{ runner.os }}-build-${{ matrix.environment }}-${{ hashFiles('src/**', 'include/**', '**/platformio.ini') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ matrix.environment }}-
          ${{ runner.os }}-build-

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install PlatformIO
      run: |
        python -m pip install --upgrade pip
        pip install platformio

    - name: Install Dependencies
      run: |
        # Check if libraries already exist to avoid redundant installs
        if [ ! -d ".pio/libdeps/${{ matrix.environment }}/RadioLib" ]; then
          pio lib install "jgromes/RadioLib@^6.5.0"
        fi
        if [ ! -d ".pio/libdeps/${{ matrix.environment }}/U8g2" ]; then
          pio lib install "olikraus/U8g2@^2.36.0"
        fi

    - name: Build ${{ matrix.environment }}
      run: |
        pio run -e ${{ matrix.environment }}

    - name: Check Build Output
      run: |
        echo "Build completed for ${{ matrix.environment }}"
        ls -la .pio/build/${{ matrix.environment }}/

    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: firmware-${{ matrix.environment }}
        path: .pio/build/${{ matrix.environment }}/firmware.bin

  lint:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Cache PlatformIO Core & Libraries
      uses: actions/cache@v4
      with:
        path: |
          ~/.platformio
          .pio/libdeps
        key: ${{ runner.os }}-pio-lint-${{ hashFiles('**/platformio.ini', '**/lib_deps') }}
        restore-keys: |
          ${{ runner.os }}-pio-lint-
          ${{ runner.os }}-pio-

    - name: Cache Python packages
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}-platformio
        restore-keys: |
          ${{ runner.os }}-pip-platformio
          ${{ runner.os }}-pip-

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install PlatformIO
      run: |
        python -m pip install --upgrade pip
        pip install platformio

    - name: Run PlatformIO Check
      run: |
        pio check -e sender-check
        pio check -e receiver-check
